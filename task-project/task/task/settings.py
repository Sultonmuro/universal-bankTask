"""
Django settings for task project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-z(35i9-p85ve^t((=5j&^e&#)vt=+2mb+d%y@q9@=p-9%n2)%f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'excel',
    'import_export',
    'transfers'
]
EXCHANGE_RATES = {
    'USD_UZS': 12500.00,
    'RUB_UZS': 140.00, # Example: 1 RUB = 140 UZS
    
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'task.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'task.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME':"task_project",
        'USER':'postgres',
        'PASSWORD':"root123",
        "HOST":"localhost",
        "PORT":5432
    }
}

TELEGRAM_BOT_TOKEN = config('TELEGRAM_BOT_TOKEN', default='')
TELEGRAM_BOT_CHAT_ID = config('TELEGRAM_BOT_CHAT_ID', default='')
# ДОБАВЬТЕ ЭТУ СТРОКУ ДЛЯ ОТЛАДКИ:
print(f"DEBUG: TELEGRAM_BOT_TOKEN loaded: {TELEGRAM_BOT_TOKEN[:5]}...")
print(f"DEBUG: TELEGRAM_BOT_CHAT_ID loaded: {TELEGRAM_BOT_CHAT_ID}")
TELEGRAM_LOG_MESSAGES = {
    'card_balance_status': {
        'en': "Dear {owner}, your card ending in {last_4_digits} has a balance of {balance} UZS. Status: {status}.",
        'uz': "Hurmatli {owner}, sizning {last_4_digits} bilan tugaydigan kartangizda {balance} UZS balansi bor. Holat: {status}.",
        'ru': "Уважаемый(ая) {owner}, на вашей карте, оканчивающейся на {last_4_digits}, баланс {balance} UZS. Статус: {status}."
    },
    'no_phone_number': {
        'en': "Skipped SMS for {owner} (Card: {card_number}) - No phone number.",
        'uz': "SMS yuborilmadi {owner} uchun (Karta: {card_number}) - Telefon raqami yo'q.",
        'ru': "SMS пропущено для {owner} (Карта: {card_number}) - Нет номера телефона."
    },
    'simulated_sms_sent': {
        'en': "Successfully simulated sending SMS to {count} card(s).",
        'uz': "SMS yuborish muvaffaqiyatli simulyatsiya qilindi: {count} karta(lar).",
        'ru': "Успешно симулирована отправка SMS на {count} карту(ы)."
    },
    'no_sms_sent': {
        'en': "No SMS were sent (either no cards selected or no phone numbers found).",
        'uz': "SMS yuborilmadi (kartalar tanlanmagan yoki telefon raqamlari topilmadi).",
        'ru': "SMS не отправлено (карты не выбраны или номера телефонов не найдены)."
    }
}
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
